name: Elixir Tests
on:
  push:
  pull_request:

jobs:
  #
  # Run tests on all supported Elixir versions
  #
  test:
    name: mix test (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})
    strategy:
      matrix:
        elixir: ['1.5.0', '1.5.3', '1.6.6', '1.6.x', '1.7.4', '1.8.2', '1.9.4', '1.10.4', '1.10.x', '1.11.4', '1.11.x', '1.12.2', '1.12.x']
        include:
          - elixir: '1.5.0'
            otp: '20.x'
          - elixir: '1.5.3'
            otp: '20.x'
          - elixir: '1.6.6'
            otp: '20.x'
          - elixir: '1.6.x'
            otp: '21.x'
          - elixir: '1.7.4'
            otp: '21.x'
          - elixir: '1.8.2'
            otp: '21.x'
          - elixir: '1.9.4'
            otp: '22.x'
          - elixir: '1.10.4'
            otp: '22.x'
          - elixir: '1.10.x'
            otp: '23.x'
          - elixir: '1.11.4'
            otp: '22.x'
          - elixir: '1.11.x'
            otp: '23.x'
          - elixir: '1.12.2'
            otp: '23.x'
          - elixir: '1.12.x'
            otp: '24.x'
    runs-on: ubuntu-18.04

    env:
      MIX_ENV: test

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.otp }}
          elixir-version: ${{ matrix.elixir }}

      - name: Install Dependencies
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get --only=test

      - name: Run Tests
        run: mix test

  #
  # Do static code analysis with Credo
  #
  credo:
    name: mix credo (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})
    strategy:
      matrix:
        elixir: ['1.12.x']
        include:
        - elixir: '1.12.x'
          otp: '24.x'
    runs-on: ubuntu-18.04

    env:
      MIX_ENV: dev

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-elixir@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}

    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get --only=dev

    - name: Run Credo
      run: mix credo --strict

  #
  # Do static code analysis with Dialyzer
  #
  dialyzer:
    name: mix dialyzer (Elixir ${{ matrix.elixir }} OTP ${{ matrix.otp }})
    strategy:
      matrix:
        elixir: ['1.12.x']
        include:
        - elixir: '1.12.x'
          otp: '24.x'
    runs-on: ubuntu-18.04

    env:
      MIX_ENV: dev

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-elixir@v1
      with:
        otp-version: ${{ matrix.otp }}
        elixir-version: ${{ matrix.elixir }}

    - name: Install Dependencies
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get --only=dev

    - name: Fetch PLT Cache
      uses: actions/cache@v2
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('**/mix.lock') }}

    - name: Generate PLTs
      if: steps.fetch-plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run Dialyzer
      run: mix dialyzer --no-check
